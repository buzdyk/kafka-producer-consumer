services:
  producer:
    build: ./cmd/producer
    container_name: kafka-like-go-producer
    depends_on:
      - kafka
    networks:
      - myNetwork
    ports:
      - "9090:9090"

  consumer:
    build: ./cmd/consumer
    container_name: kafka-like-go-consumer
    depends_on:
      - kafka
    networks:
      - myNetwork

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: kafka-like-zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - myNetwork
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-volume:/bitnami

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-like-kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    networks:
      - myNetwork
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-like-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://kafka-like-kafka:9092,PLAINTEXT://kafka-like-kafka:19092'
      KAFKA_LISTENERS: 'PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka-volume:/var/lib/kafka

volumes:
  zookeeper-volume:
  kafka-volume:

networks:
  myNetwork:
    name: myNetwork
    driver: bridge
